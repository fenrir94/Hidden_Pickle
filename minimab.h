//미니맵 구조체 생성 후 -> gamemanager에 추가

void initMinimab(CP_Vector mab_size);
/*
입력으로 맵 사이즈 벡터를 받고, 게임매니저에 존재하는 플레이어 포지션, 아이템 카운트, 장애물 카운트 사용
미니맵 이미지의 기본 좌표를 설정해야함. (mx,my)
아이템, 플레이어, 탈출구, 장애물의 초기 위치를 읽어옴. 
-> initcamera 함수가 위치를 이동시키기 때문에 그보다 먼저 불려야함
읽어온 초기 좌표를 미니맵 이미지 위 좌표로 올려야함. 미니맵 사이즈에 맞게 스케일을 줄인 뒤, 좌표를 이동시켜야함.
-> 맵 사이즈는 JSON 파일에서 지정하기 때문에 그때마다 미니맵 이미지 사이즈 및, 초기 좌표에 맞게 스케일을 조정 할 수 있어야함.
-> 우상단에 위치시키도록, 미니맵 사이즈 300 x 300 일때 맵 사이즈 w x h에 비율에 맞춰 스케일 조절이 필요함.
-> dx + dy -> dx * (300 / w) + dy * (300 / h)로 변환.
-> 각 오브젝트의 초기 좌표를 읽어옴. (ox, oy) 라고 가정. 미니맵 좌표 (mx,my)
-> 중심 좌표 (GWW, GWH)를 통해 벡터 (ox- GWW, oy - GWH)를 얻어 (ox- GWW * (300 / w) , oy - GWH * (300 / h))로 스케일링.
-> 오브젝트의 아이콘 좌표는 (mx,my) + (ox- GWW * (300 / w) , oy - GWH * (300 / h))
*/

void updateMinimab();
/*
플레이어가 이동하면 미니맵의 플레이어 아이콘 또한 이동해야함.
-> 기존 무빙벡터 이용해서 이동 시킴. 미니맵 사이즈에 맞게 벡터 사이즈를 줄여야함.
-> dx + dy -> dx * (300 / w) + dy * (300 / h)로 변환.

플레이어가 아이템을 획득하면 해당 아이템 아이콘이 사라져야함. 
-> 아이템 관련 함수 참조 아이템 구조체에서 isCollided 이용

플레이어와 일정 거리 이상 가까워진 장애물의 아이콘이 나타나야함. 나타난 후론 미니맵에 계속 표시됨.
장애물과 플레이어의 좌표를 비교해 일정 거리 이상에 한번이라도 들어오면 state 1
-> checkCollision_Circle_to_Circle 함수 사용
*/

void printMinimab();
/*
각 프린트된 오브젝트의 좌표 및 카운트를 사용해 미니맵 이미지를 그려냄.
장애물의 경우 state가 1일 때만 이미지를 출력시킴
*/